<?php

declare(strict_types=1);

namespace Flexibill\NavBundle\Enum;

use App\AppBundle\Enum\AbstractEnum;

/**
 * Class TechnicalErrorCodeEnum
 * @package Flexibill\NavBundle\Enum
 */
class TechnicalErrorCodeEnum extends AbstractEnum
{
    const INVALID_REQUEST = 'INVALID_REQUEST';
    const INVALID_SECURITY_USER = 'INVALID_SECURITY_USER';
    const NOT_REGISTERED_CUSTOMER = 'NOT_REGISTERED_CUSTOMER';
    const INVALID_CUSTOMER = 'INVALID_CUSTOMER';
    const INVALID_USER_RELATION = 'INVALID_USER_RELATION';
    const FORBIDDEN = 'FORBIDDEN';
    const REQUEST_ID_NOT_UNIQUE = 'REQUEST_ID_NOT_UNIQUE';
    const INVALID_REQUEST_SIGNATURE = 'INVALID_REQUEST_SIGNATURE';
    const INDEX_NOT_SEQUENTIAL = 'INDEX_NOT_SEQUENTIAL';
    const INVALID_EXCHANGE_TOKEN = 'INVALID_EXCHANGE_TOKEN';
    const REQUEST_VERSION_NOT_ALLOWED = 'REQUEST_VERSION_NOT_ALLOWED';
    const MAINTENANCE_MODE = 'MAINTENANCE_MODE';
    const STATUS_QUERY_NOT_ALLOWED = 'STATUS_QUERY_NOT_ALLOWED';
    const MULTIPLE_QUERY_RESULT_FOUND = 'MULTIPLE_QUERY_RESULT_FOUND';
    const BAD_QUERY_PARAM_OVERLAP = 'BAD_QUERY_PARAM_OVERLAP';
    const BAD_QUERY_PARAM_RANGE_EXCEEDED = 'BAD_QUERY_PARAM_RANGE_EXCEEDED';
    const BAD_QUERY_PARAM_EQ_NOT_STANDALONE = 'BAD_QUERY_PARAM_EQ_NOT_STANDALONE';
    const BAD_QUERY_PARAM_OPERATOR_COLLISION = 'BAD_QUERY_PARAM_OPERATOR_COLLISION';
    const BAD_QUERY_PARAM_SUPPLIER_NOT_EXPECTED = 'BAD_QUERY_PARAM_SUPPLIER_NOT_EXPECTED';
    const BAD_QUERY_PARAM_SUPPLIER_EXPECTED = 'BAD_QUERY_PARAM_SUPPLIER_EXPECTED';
    const INVALID_TIMESTAMP = 'INVALID_TIMESTAMP';
    const INVALID_PASSWORD_HASH_CRYPTO = 'INVALID_PASSWORD_HASH_CRYPTO';
    const INVALID_REQUEST_SIGNATURE_HASH_CRYPTO = 'INVALID_REQUEST_SIGNATURE_HASH_CRYPTO';
    const INVALID_REQUEST_VERSION = 'INVALID_REQUEST_VERSION';
    const INVALID_HEADER_VERSION = 'INVALID_HEADER_VERSION';
}
